    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:27:01",
    "ping_ms": "2000",
    "temperature_c": "26",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:28:02",
    "ping_ms": "2000",
    "temperature_c": "26",
    "humidity_p": "31"
}, {
    "time_id": "2022-01-10 10:29:02",
    "ping_ms": "2000",
    "temperature_c": "26",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:30:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:31:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:32:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:33:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:34:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:35:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:36:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:37:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:39:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:40:02",
    "ping_ms": "2000",
    "temperature_c": "26",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:41:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:42:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:43:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:44:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:45:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:46:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:47:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:48:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:49:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:50:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:51:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:52:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:53:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:54:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:55:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:56:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:57:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:58:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 10:59:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:00:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:01:02",
    "ping_ms": "2000",
    "temperature_c": "26",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:02:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:03:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:05:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:06:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:08:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:09:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:11:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:12:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:13:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:14:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:15:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:17:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:19:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:20:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:21:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:22:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:23:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:24:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:25:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:26:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:27:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:29:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:30:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:31:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:32:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:33:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:34:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:35:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:36:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:37:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:38:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:39:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:41:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:43:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:44:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:45:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:46:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:47:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:48:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:49:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:50:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:51:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:52:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:53:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:54:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:55:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:56:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:57:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 11:59:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:00:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:02:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:03:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:04:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:05:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:06:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:07:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:08:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:09:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:10:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:11:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:12:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:13:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:14:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:15:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:16:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:17:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:18:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:19:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:20:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:21:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:22:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:23:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:25:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:26:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:28:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:29:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:30:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:31:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:32:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:33:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:34:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:35:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:36:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:39:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:40:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:41:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:42:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:43:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:44:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:45:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:46:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:47:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:48:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:49:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:50:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:51:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:52:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "30"
}, {
    "time_id": "2022-01-10 12:53:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 12:54:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 12:55:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 12:56:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 12:57:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 12:59:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:00:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:01:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:02:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:03:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:04:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:05:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:06:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "29"
}, {
    "time_id": "2022-01-10 13:07:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:08:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:09:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:10:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:11:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:12:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:13:02",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:14:01",
    "ping_ms": "2000",
    "temperature_c": "27",
    "humidity_p": "28"
}, {
    "time_id": "2022-01-10 13:31:13",
    "ping_ms": "14.4",
    "temperature_c": "23",
    "humidity_p": "42"
}, {
    "time_id": "2022-01-10 13:32:02",
    "ping_ms": "15.53",
    "temperature_c": "23",
    "humidity_p": "38"
}]
^CProcessed a total of 651695 messages
[student898_2@bigdataanalytics-worker-3 ~]$ export SPARK_KAFKA_VERSION=0.10
[student898_2@bigdataanalytics-worker-3 ~]$ pyspark --master local[1] --packages org.apache.spark:spark-sql-kafka-0-10_2.11:2.3.2
SPARK_MAJOR_VERSION is set to 2, using Spark2
Python 2.7.5 (default, Nov 16 2020, 22:23:17) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
Ivy Default Cache set to: /home/student898_2/.ivy2/cache
The jars for the packages stored in: /home/student898_2/.ivy2/jars
:: loading settings :: url = jar:file:/usr/hdp/3.1.4.0-315/spark2/jars/ivy-2.4.0.jar!/org/apache/ivy/core/settings/ivysettings.xml
org.apache.spark#spark-sql-kafka-0-10_2.11 added as a dependency
:: resolving dependencies :: org.apache.spark#spark-submit-parent-518ac9eb-395e-47af-85cd-f6963d1464cd;1.0
	confs: [default]
	found org.apache.spark#spark-sql-kafka-0-10_2.11;2.3.2 in central
	found org.apache.kafka#kafka-clients;0.10.0.1 in central
	found net.jpountz.lz4#lz4;1.3.0 in central
	found org.xerial.snappy#snappy-java;1.1.2.6 in central
	found org.slf4j#slf4j-api;1.7.16 in central
	found org.spark-project.spark#unused;1.0.0 in central
:: resolution report :: resolve 287ms :: artifacts dl 16ms
	:: modules in use:
	net.jpountz.lz4#lz4;1.3.0 from central in [default]
	org.apache.kafka#kafka-clients;0.10.0.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.11;2.3.2 from central in [default]
	org.slf4j#slf4j-api;1.7.16 from central in [default]
	org.spark-project.spark#unused;1.0.0 from central in [default]
	org.xerial.snappy#snappy-java;1.1.2.6 from central in [default]
	---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
	|       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
	|      default     |   6   |   0   |   0   |   0   ||   6   |   0   |
	---------------------------------------------------------------------
:: retrieving :: org.apache.spark#spark-submit-parent-518ac9eb-395e-47af-85cd-f6963d1464cd
	confs: [default]
	0 artifacts copied, 6 already retrieved (0kB/6ms)
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
22/01/15 21:31:28 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.
22/01/15 21:31:28 WARN Utils: Service 'SparkUI' could not bind on port 4041. Attempting port 4042.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /__ / .__/\_,_/_/ /_/\_\   version 2.3.2.3.1.4.0-315
      /_/

Using Python version 2.7.5 (default, Nov 16 2020 22:23:17)
SparkSession available as 'spark'.
>>> from pyspark.sql import functions as F
>>> from pyspark.sql.types import StructType, StringType
>>> def console_output(df, freq):
...     return df.writeStream \
...         .format("console") \
...         .trigger(processingTime='%s seconds' % freq ) \
...         .options(truncate=True) \
...         .start()
... 
>>> kafka_brokers = "bigdataanalytics-worker-3:6667"
>>> raw_data = spark.read. \
...     format("kafka"). \
...     option("kafka.bootstrap.servers", kafka_brokers). \
...     option("subscribe", "shadrin_data"). \
...     option("startingOffsets", "earliest"). \
...     option("endingOffsets", """{"shadrin_data":{"0":20}}"""). \
...     load()
>>> out = console_output(raw_data, 10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 2, in console_output
  File "/usr/hdp/current/spark2-client/python/pyspark/sql/dataframe.py", line 238, in writeStream
    return DataStreamWriter(self)
  File "/usr/hdp/current/spark2-client/python/pyspark/sql/streaming.py", line 684, in __init__
    self._jwrite = df._jdf.writeStream()
  File "/usr/hdp/current/spark2-client/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py", line 1257, in __call__
  File "/usr/hdp/current/spark2-client/python/pyspark/sql/utils.py", line 69, in deco
    raise AnalysisException(s.split(': ', 1)[1], stackTrace)
pyspark.sql.utils.AnalysisException: u"'writeStream' can be called only on streaming Dataset/DataFrame;"
>>> raw_data = spark.readStream. \
...     format("kafka"). \
...     option("kafka.bootstrap.servers", kafka_brokers). \
...     option("subscribe", "shadrin_data"). \
...     option("startingOffsets", "earliest"). \
...     option("maxOffsetsPerTrigger", "5"). \
...     load()
>>> out = console_output(raw_data, 10)
-------------------------------------------                                     
Batch: 0
-------------------------------------------
+----+--------------------+------------+---------+------+--------------------+-------------+
| key|               value|       topic|partition|offset|           timestamp|timestampType|
+----+--------------------+------------+---------+------+--------------------+-------------+
|null|          [2F 2A 2A]|shadrin_data|        0|     0|2022-01-15 21:14:...|            0|
|null|[20 45 78 70 6F 7...|shadrin_data|        0|     1|2022-01-15 21:14:...|            0|
|null|[20 40 76 65 72 7...|shadrin_data|        0|     2|2022-01-15 21:14:...|            0|
|null|          [20 2A 2F]|shadrin_data|        0|     3|2022-01-15 21:14:...|            0|
|null|                  []|shadrin_data|        0|     4|2022-01-15 21:14:...|            0|
+----+--------------------+------------+---------+------+--------------------+-------------+

-------------------------------------------
Batch: 1
-------------------------------------------
+----+--------------------+------------+---------+------+--------------------+-------------+
| key|               value|       topic|partition|offset|           timestamp|timestampType|
+----+--------------------+------------+---------+------+--------------------+-------------+
|null|[2F 2F 20 44 61 7...|shadrin_data|        0|     5|2022-01-15 21:14:...|            0|
|null|                  []|shadrin_data|        0|     6|2022-01-15 21:14:...|            0|
|null|[2F 2F 20 63 73 5...|shadrin_data|        0|     7|2022-01-15 21:14:...|            0|
|null|                  []|shadrin_data|        0|     8|2022-01-15 21:14:...|            0|
|null|             [5B 7B]|shadrin_data|        0|     9|2022-01-15 21:14:...|            0|
+----+--------------------+------------+---------+------+--------------------+-------------+

out.stop()
>>> raw_data.printSchema()
root
 |-- key: binary (nullable = true)
 |-- value: binary (nullable = true)
 |-- topic: string (nullable = true)
 |-- partition: integer (nullable = true)
 |-- offset: long (nullable = true)
 |-- timestamp: timestamp (nullable = true)
 |-- timestampType: integer (nullable = true)

>>> schema = StructType() \
...     .add("time_id", FloatType()) \
...     .add("ping_ms", FloatType()) \
...     .add("temperature_c", FloatType()) \
...     .add("humidity_p", FloatType())
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
NameError: name 'FloatType' is not defined
>>> schema = StructType() \
...     .add("time_id", StringType()) \
...     .add("ping_ms", FloatType()) \
...     .add("temperature_c", FloatType()) \
...     .add("humidity_p", FloatType())
Traceback (most recent call last):
  File "<stdin>", line 3, in <module>
NameError: name 'FloatType' is not defined
>>> schema = StructType() \
...     .add("time_id", StringType()) \
...     .add("ping_ms", StringType()) \
...     .add("temperature_c", FloatType()) \
...     .add("humidity_p", FloatType())
Traceback (most recent call last):
  File "<stdin>", line 4, in <module>
NameError: name 'FloatType' is not defined
>>> schema = StructType() \
...     .add("time_id", StringType()) \
...     .add("ping_ms", StringType()) \
...     .add("temperature_c", StringType()) \
...     .add("humidity_p", FloatType())
Traceback (most recent call last):
  File "<stdin>", line 5, in <module>
NameError: name 'FloatType' is not defined
>>> schema = StructType() \
...     .add("time_id", StringType()) \
...     .add("ping_ms", StringType()) \
...     .add("temperature_c", StringType()) \
...     .add("humidity_p", StringType())
>>> value_data = raw_data \
...     .select(F.from_json(F.col("value").cast("String"), schema).alias("value"), "offset")
>>> value_data.printSchema()
root
 |-- value: struct (nullable = true)
 |    |-- time_id: string (nullable = true)
 |    |-- ping_ms: string (nullable = true)
 |    |-- temperature_c: string (nullable = true)
 |    |-- humidity_p: string (nullable = true)
 |-- offset: long (nullable = true)

>>> parsed_data = value_data.select("value.*", "offset")
>>> parsed_data.printSchema()
root
 |-- time_id: string (nullable = true)
 |-- ping_ms: string (nullable = true)
 |-- temperature_c: string (nullable = true)
 |-- humidity_p: string (nullable = true)
 |-- offset: long (nullable = true)

>>> extended_data = parsed_data.withColumn('test', F.col("humidity_p") / F.col("temperature_c"))
>>> extended_data.printSchema()
root
 |-- time_id: string (nullable = true)
 |-- ping_ms: string (nullable = true)
 |-- temperature_c: string (nullable = true)
 |-- humidity_p: string (nullable = true)
 |-- offset: long (nullable = true)
 |-- test: double (nullable = true)

>>> out = console_output(extended_data, 30)
>>> -------------------------------------------
Batch: 0
-------------------------------------------
+-------+-------+-------------+----------+------+----+
|time_id|ping_ms|temperature_c|humidity_p|offset|test|
+-------+-------+-------------+----------+------+----+
|   null|   null|         null|      null|     0|null|
|   null|   null|         null|      null|     1|null|
|   null|   null|         null|      null|     2|null|
|   null|   null|         null|      null|     3|null|
|   null|   null|         null|      null|     4|null|
+-------+-------+-------------+----------+------+----+

out.stop()-------------------------------------------
Batch: 1
-------------------------------------------
+-------+-------+-------------+----------+------+----+
|time_id|ping_ms|temperature_c|humidity_p|offset|test|
+-------+-------+-------------+----------+------+----+
|   null|   null|         null|      null|     5|null|
|   null|   null|         null|      null|     6|null|
|   null|   null|         null|      null|     7|null|
|   null|   null|         null|      null|     8|null|
|   null|   null|         null|      null|     9|null|
+-------+-------+-------------+----------+------+----+


>>> 
Traceback (most recent call last):
  File "/usr/hdp/current/spark2-client/python/pyspark/context.py", line 261, in signal_handler
    raise KeyboardInterrupt()
KeyboardInterrupt
>>> out.stop()
>>> exit()
[student898_2@bigdataanalytics-worker-3 ~]$ logout
Connection to 37.139.41.176 closed.
igor@igor-MS-7808:~$ 
